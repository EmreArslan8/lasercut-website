import { supabase } from "@/lib/api/supabaseClient";
import { NextRequest, NextResponse } from "next/server";

export async function POST(req: NextRequest) {
  try {
    const body = await req.json();


    const { items } = body; // KullanÄ±cÄ±dan gelen Ã¼rÃ¼n IDâ€™leri

    if (!items || items.length === 0) {
      return NextResponse.json({ success: false, message: "Eksik bilgiler!" }, { status: 400 });
    }

    // **ğŸ“Œ Yeni `checkoutId` oluÅŸtur**
    const checkoutId = `CHKOUT-${Date.now()}`; // Ã–rn: CHKOUT-1710792000000

  


    // **ğŸ“Œ SeÃ§ili Ã¼rÃ¼nleri Supabaseâ€™ten al**
    const { data: selectedItems, error } = await supabase
      .from("cart_items")
      .select("*")
      .in("id", items); // SeÃ§ili Ã¼rÃ¼n IDâ€™leriyle filtrele

    if (error) {
      console.error("ğŸš¨ API HatasÄ±:", error);
      return NextResponse.json({ success: false, message: error.message }, { status: 500 });
    }

    // **ğŸ“Œ Checkout bilgisini Supabaseâ€™e kaydet**
    const { error: checkoutError } = await supabase
      .from("checkouts") // ğŸ“Œ "checkouts" tablosuna kaydediyoruz
      .insert([
        {
          id: checkoutId,
          items: JSON.stringify(selectedItems),
          status: "pending", // Ã–deme yapÄ±lana kadar "pending" olarak kalÄ±r
        },
      ]);

    if (checkoutError) {
      console.error("ğŸš¨ Checkout kaydedilemedi:", checkoutError);
      return NextResponse.json({ success: false, message: checkoutError.message }, { status: 500 });
    }

    console.log(`âœ… Checkout oluÅŸturuldu: ${checkoutId}`);

    return NextResponse.json({ success: true, checkoutId });
  } catch (error: any) {
    console.error("ğŸš¨ API HatasÄ±:", error.message);
    return NextResponse.json({ success: false, message: error.message }, { status: 500 });
  }
}
